/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4.1/userguide/tutorial_java_projects.html
 */

import java.time.ZoneId
import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter

plugins {
    id 'java'
    id 'application'
    id 'groovy'

    id "com.github.johnrengelman.shadow" version "$shadowVersion"
    id "com.github.ben-manes.versions" version "$benManesVersion"
}


repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven { url 'https://jitpack.io' }
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
//            options.compilerArgs << "-Xlint:all" << "-Werror"
        }
    }
}
sourceCompatibility = 11
targetCompatibility = 11

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation "io.dropwizard:dropwizard-core:$dropwizardVersion"
    implementation "com.datastax.oss:java-driver-core:$casandraDriverVersion"
    implementation "com.datastax.oss:java-driver-mapper-runtime:$casandraDriverVersion"
    annotationProcessor "com.datastax.oss:java-driver-mapper-processor:$casandraDriverVersion"
    implementation 'org.lz4:lz4-java:1.8.0'

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation "io.dropwizard:dropwizard-testing:$dropwizardVersion"
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation "io.rest-assured:rest-assured:$restAssuredVersion"

    testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
}

// Define the main class for the application
mainClassName = 'com.knoma.web.WebApp'

shadowJar {
    mergeServiceFiles()
    exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
    manifest {
        attributes 'Implementation-Title': rootProject.name
        attributes 'Implementation-Version': rootProject.version
        attributes 'Implementation-Vendor-Id': rootProject.group
        attributes 'Build-Time': ZonedDateTime.now(ZoneId.of("UTC"))
                .format(DateTimeFormatter.ISO_ZONED_DATE_TIME)
        attributes 'Built-By': InetAddress.localHost.hostName
        attributes 'Created-By': 'Gradle ' + gradle.gradleVersion
        attributes 'Main-Class': mainClassName
    }
}

jar.enabled = false

run {
    args = ['server', 'config.yml']
}

test {
    useJUnitPlatform()
}

project.tasks.assemble.dependsOn project.tasks.shadowJar


